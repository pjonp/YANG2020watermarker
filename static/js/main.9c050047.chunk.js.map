{"version":3,"sources":["index.js"],"names":["watermarkOptions","cropper","ReactDOM","render","useState","selectedWatermark","setSelectedWatermark","watermarkLevel","setWatermarkLevel","currentDisplay","setcurrentDisplay","useEffect","buildCropper","changeWaterMark","e","parseInt","target","id","cropBox","document","querySelector","cropPreview","Cropper","aspectRatio","minCropBoxWidth","dragMode","cropBoxMovable","crop","debounce","canvas","getCroppedCanvas","minWidth","imageSmoothingQuality","src","toDataURL","buildWatermarkOptions","map","i","j","className","key","alt","process","onClick","buildDownloadLinks","downloadLinkTarget","outputSize","resultTarget","getElementById","backgroundImage","watermarkImage","setAttribute","getContext","globalAlpha","drawImage","naturalWidth","downloadAnchor","media","srcSet","type","accept","name","onChange","preventDefault","upload","files","length","endsWith","destroy","reader","FileReader","onload","r","result","readAsDataURL","alert","hidden","style","href","download","rel","opacity","min","max","value","Math","round","onInput","size","clearRect"],"mappings":"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","file":"static/js/main.9c050047.chunk.js","sourcesContent":["import ReactDOM from 'react-dom';\nimport React, {useState, useEffect} from 'react';\nimport Cropper from 'cropperjs';\nimport debounce from 'lodash/debounce';\nimport './ProfileImageWatermarker.css';\nimport '../node_modules/cropperjs/dist/cropper.css'\n//const watermark = require('watermarkjs')\n\nconst watermarkOptions = [//'/watermarks/yang1.png',\n                          '/watermarks/yang2.png','/watermarks/yang3.png']\nlet cropper = ''\n\nfunction ProfileImageWatermarker() {\n  const [selectedWatermark, setSelectedWatermark] = useState(0);\n  const [watermarkLevel, setWatermarkLevel] = useState(0.75);\n  const [currentDisplay, setcurrentDisplay] = useState(1);\n\n  const outputSizeSmall = 128;\n  const outputSizeMedium = 256;\n  const outputSizeLarge = 512;\n\n  useEffect( () => {\n        buildCropper();\n    },[]);\n\n  const changeWaterMark = (e) => {\n    setSelectedWatermark(parseInt(e.target.id))\n  }\n  const adjustWatermarkLevel = (e) => {\n    setWatermarkLevel(e.target.value / 100)\n  }\n\n  const buildCropper = () => {\n    let cropBox = document.querySelector('#cropImage')\n    let cropPreview = document.querySelector('#cropPreview')\n    cropper = new Cropper(cropBox, {\n        aspectRatio: 1,\n        minCropBoxWidth: 100,\n        dragMode: 'move',\n        cropBoxMovable: false,\n        crop: debounce(() => {\n          let canvas = cropper.getCroppedCanvas({\n            minWidth: 512,\n            imageSmoothingQuality: 'high'\n          })\n          cropPreview.src = canvas.toDataURL('image/png')\n        }, 5)\n      });\n  }\n\n  const buildWatermarkOptions = watermarkOptions.map( (i,j) => {\n      return <img className={selectedWatermark === j ? 'watermarkOption selectedWatermark' : 'watermarkOption'} id={`${j}watermarkChoice`} key={`watermarkoption${j}`} alt={i} src={process.env.PUBLIC_URL + i} onClick={changeWaterMark} />\n    })\n\n  const makeCropper = (e) => {\n      e.preventDefault()\n      let upload = e.target.files;\n      if(upload.length === 0) return;\n      let cropBox = document.querySelector('#cropImage');\n\n      if(!upload[0].name.endsWith('.jpg') && !upload[0].name.endsWith('.png')) {\n        alert('Please select a .jpg or .png file.')\n        return\n      }\n\n      cropper.destroy()\n\n      cropBox.alt= 'Loading Image...'\n      cropBox.src = '';\n      let reader = new FileReader();\n      reader.onload = r => {\n          cropBox.alt= 'Image Editor Canvas'\n          cropBox.src = r.target.result;\n          buildCropper();\n          };\n      reader.readAsDataURL(upload[0]);\n  };\n\n\n  const createImage = (e, size) => {\n    e.preventDefault()\n    setcurrentDisplay(2)\n    buildDownloadLinks('downloadLinkSmall',outputSizeSmall)\n    buildDownloadLinks('downloadLinkMedium',outputSizeMedium)\n    buildDownloadLinks('downloadLinkLarge',outputSizeLarge)\n    };\n\n  const buildDownloadLinks = (downloadLinkTarget, outputSize) => {\n    let resultTarget = document.getElementById('resultImage');\n    let backgroundImage = document.getElementById('cropPreview');\n    let watermarkImage = document.getElementById('cropWatermark');\n\n    resultTarget.setAttribute('width', outputSize);\n    resultTarget.setAttribute('height', outputSize);\n\n    resultTarget = resultTarget.getContext('2d');\n    resultTarget.globalAlpha = 1;\n    resultTarget.drawImage(backgroundImage,\n              0, 0, backgroundImage.naturalWidth, backgroundImage.naturalWidth,\n              0, 0, outputSize, outputSize);\n    resultTarget.globalAlpha = watermarkLevel;\n    resultTarget.drawImage(watermarkImage,\n             0, 0, 512, 512,\n             0, 0, outputSize, outputSize);\n\n    resultTarget = document.getElementById('resultImage');\n    let downloadAnchor = document.getElementById(downloadLinkTarget);\n    downloadAnchor.setAttribute('href', resultTarget.toDataURL('image/png', 1.0));\n    downloadAnchor.setAttribute('download', 'YANG2020');\n  }\n\n  const goBack = () => {\n    document.getElementById('resultImage')\n      .getContext('2d')\n      .clearRect(0,0,outputSizeLarge,outputSizeLarge);\n    setcurrentDisplay(1)\n  };\n\n  return (\n    <div id='ProfileImageWatermarker'>\n      <header>\n        <picture>\n          <source media='(max-width: 749px)' srcSet={process.env.PUBLIC_URL + '/headerSmall.png'} />\n          <source media='(min-width: 750px)' srcSet={process.env.PUBLIC_URL + '/headerLarge.png'} />\n          <img src={process.env.PUBLIC_URL + '/headerLarge.png'} alt='Yang2020 Banner' />\n        </picture>\n      </header>\n\n      <div id='infoContainer'>\n        { currentDisplay === 1 &&\n          <>\n            <p>Show your support on social media with a Yang2020 watermarked avatar.</p>\n            <label className='actionButton'>\n              <h2><i className=\"fas fa-cloud-upload-alt\"></i> LOAD</h2>\n              <input id='photoUpload' type='file' accept='.png, .jpg' name='photo' onChange={makeCropper} hidden />\n            </label>\n          </>\n        }\n          <p style={ {'display': currentDisplay === 2 ? 'block' : 'none'} }>Download your new Yang2020 avatar and upload to your social platforms.</p>\n        <div id='downloadButtonContainer' style={ {'display': currentDisplay === 2 ? 'flex' : 'none'} }>\n          <a id='downloadLinkSmall' className='actionButton' href='empty' download=''>\n            <h2><i className=\"fas fa-cloud-download-alt\"></i> (128²)</h2>\n          </a>\n          <a id='downloadLinkMedium' className='actionButton' href='empty' download='' >\n            <h2><i className=\"fas fa-cloud-download-alt\"></i> (256²)</h2>\n          </a>\n          <a id='downloadLinkLarge' className='actionButton' href='empty' download='' >\n            <h2><i className=\"fas fa-cloud-download-alt\"></i> (512²)</h2>\n          </a>\n        </div>\n\n      </div>\n      <div id='headerContainer'>\n        <h3 className='headerLeft'>{currentDisplay === 1 ? 'Drag/Zoom/Crop' : 'Upload your image:' }</h3>\n        <h3 className='headerRight'>{currentDisplay === 1 ? 'Preview' : 'Result' }</h3>\n      </div>\n      <div id='imageContainer'>\n        <div className={ currentDisplay === 1 ? 'cropBox' : 'cropBoxHide'} >\n          <img id='cropImage' src={process.env.PUBLIC_URL + '/startImage.jpg'} alt='Editor Canvas' />\n        </div>\n        <div className='cropBox' style={ {'display': currentDisplay === 2 ? 'block' : 'none'} }>\n          <ul>\n            <li><a href='https://twitter.com/settings/profile' target='_blank' rel=\"noopener noreferrer\"><i className=\"fab fa-twitter\"></i> Twitter (Use: 512²)</a></li>\n            <li><a href='https://facebook.com/settings/profile' target='_blank' rel=\"noopener noreferrer\"><i className=\"fab fa-facebook-f\"></i> Facebook (Use: ??)</a></li>\n            <li><a href='https://support.discordapp.com/hc/en-us/articles/204156688-How-do-I-change-my-avatar-' target='_blank' rel=\"noopener noreferrer\"><i className=\"fab fa-discord\"></i> Discord (Use: 128²)</a></li>\n            <li><a href='https://counter.social/settings/profile' target='_blank' rel=\"noopener noreferrer\"><i className=\"fas fa-fire-extinguisher\"></i> CounterSocial (512²)</a></li>\n          </ul>\n        </div>\n\n        <div className='previewBox' style={ {'display': currentDisplay === 1 ? 'block' : 'none'} }>\n          <img id='cropPreview' src={process.env.PUBLIC_URL + '/startImage.jpg'} alt='Cropped Preview' />\n          <img id='cropWatermark' src={process.env.PUBLIC_URL + watermarkOptions[selectedWatermark]} style={ { opacity: watermarkLevel } } alt='Watermark Preview' />\n        </div>\n        <div className='previewBox' style={ {'display': currentDisplay === 2 ? 'block' : 'none'} }>\n          <canvas id=\"resultImage\" alt='Final Preview' ></canvas>\n        </div>\n\n      </div>\n\n      {currentDisplay === 1 &&\n      <div id='watermarkOptions'>\n         Choose a watermark:\n         {buildWatermarkOptions}\n      </div>\n      }\n\n      { currentDisplay === 1 &&\n      <div id=\"transparencySlider\">\n        <input type=\"range\" min=\"10\" max=\"100\" value={Math.round(watermarkLevel * 100)} className=\"slider\" onInput={adjustWatermarkLevel} />\n        <p>Watermark Transparency: {Math.round(watermarkLevel * 100)}%</p>\n      </div>\n      }\n      <div className='navContainer'>\n      { currentDisplay === 1 &&\n        <div className='navButton' onClick={createImage}><p>CREATE <i className=\"far fa-hand-point-right\"></i></p></div>\n      }\n      { currentDisplay === 2 &&\n        <>\n        <div className='navButton' onClick={goBack}><p><i className=\"far fa-hand-point-left\"></i> BACK</p></div>\n        </>\n      }\n      </div>\n    </div>\n  );\n}\n\nReactDOM.render(<ProfileImageWatermarker />, document.getElementById('root'));\n"],"sourceRoot":""}