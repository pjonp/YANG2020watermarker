{"version":3,"sources":["index.js"],"names":["watermarkOptions","cropper","ReactDOM","render","useState","currentDisplay","setcurrentDisplay","selectedWatermark","setSelectedWatermark","watermarkLevel","setWatermarkLevel","watermarkSize","setWatermarkSize","useEffect","buildCropper","dragWatermark","changeWaterMark","e","parseInt","target","id","cropBox","document","getElementById","cropPreview","Cropper","aspectRatio","minCropBoxWidth","dragMode","cropBoxMovable","crop","debounce","canvas","getCroppedCanvas","minWidth","imageSmoothingQuality","src","toDataURL","buildWatermarkOptions","map","i","j","className","key","alt","process","onClick","buildDownloadLinks","downloadLinkTarget","outputSize","resultTarget","backgroundImage","watermarkImage","containerDim","getBoundingClientRect","width","watermarkYDim","offsetTop","watermarkXDim","offsetLeft","setAttribute","getContext","globalAlpha","drawImage","naturalWidth","downloadAnchor","pos1","pos2","pos3","pos4","watermarkTarget","startWatermarkDrag","preventDefault","clientX","targetTouches","clientY","onmouseup","endWatermarkDrag","onmousemove","watermarkDrag","ontouchend","ontouchmove","watermarkDim","overtravel","maxDim","yOffset","xOffset","style","top","left","onmousedown","ontouchstart","media","srcSet","type","accept","name","onChange","upload","files","length","querySelector","endsWith","destroy","reader","FileReader","onload","r","result","readAsDataURL","alert","hidden","href","download","rel","opacity","min","max","value","onInput","yCenter","xCenter","newYOffset","newXOffset","Math","round","size","clearRect"],"mappings":"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","file":"static/js/main.190fdcf2.chunk.js","sourcesContent":["import ReactDOM from 'react-dom';\nimport React, {useState, useEffect} from 'react';\nimport Cropper from 'cropperjs';\nimport debounce from 'lodash/debounce';\nimport './ProfileImageWatermarker.css';\nimport '../node_modules/cropperjs/dist/cropper.css'\n//const watermark = require('watermarkjs')\n\nconst watermarkOptions = ['/watermarks/yang1.png','/watermarks/yang2.png','/watermarks/yang3.png']\nlet cropper = ''\n\nfunction ProfileImageWatermarker() {\n  const [currentDisplay, setcurrentDisplay] = useState(1);\n  const [selectedWatermark, setSelectedWatermark] = useState(0);\n  const [watermarkLevel, setWatermarkLevel] = useState(0.75);\n  const [watermarkSize, setWatermarkSize] = useState(100);\n\n  const outputSizeSmall = 128;\n//  const outputSizeMedium = 256;\n  const outputSizeLarge = 512;\n\n  useEffect( () => {\n        buildCropper();\n\n        dragWatermark();\n    },[]);\n\n  const changeWaterMark = (e) => {\n    setSelectedWatermark(parseInt(e.target.id))\n  }\n  const adjustWatermarkLevel = (e) => {\n    setWatermarkLevel(e.target.value / 100)\n  }\n  const adjustWatermarkSize = (e) => {\n    let watermarkTarget = document.getElementById(\"cropWatermark\");\n    let containerDim = document.getElementById('cropPreview').getBoundingClientRect().width;\n    let watermarkDim = containerDim * (watermarkSize/100);\n    let yCenter = watermarkTarget.offsetTop + (watermarkDim/2);\n    let xCenter = watermarkTarget.offsetLeft + (watermarkDim/2);\n      watermarkDim = containerDim * (e.target.value/100)\n    let newYOffset = yCenter - (watermarkDim/2)\n    let newXOffset = xCenter - (watermarkDim/2)\n    watermarkTarget.style.top = newYOffset+'px';\n    watermarkTarget.style.left = newXOffset+'px';\n\n    setWatermarkSize(e.target.value)\n  }\n\n  const buildCropper = () => {\n    let cropBox = document.getElementById('cropImage')\n    let cropPreview = document.getElementById('cropPreview')\n    cropper = new Cropper(cropBox, {\n        aspectRatio: 1,\n        minCropBoxWidth: 100,\n        dragMode: 'move',\n        cropBoxMovable: false,\n        crop: debounce(() => {\n          let canvas = cropper.getCroppedCanvas({\n            minWidth: 512,\n            imageSmoothingQuality: 'high'\n          })\n          cropPreview.src = canvas.toDataURL('image/png')\n        }, 5)\n      });\n  }\n\n  const buildWatermarkOptions = watermarkOptions.map( (i,j) => {\n      return <img className={selectedWatermark === j ? 'watermarkOption selectedWatermark' : 'watermarkOption'} id={`${j}watermarkChoice`} key={`watermarkoption${j}`} alt={i} src={process.env.PUBLIC_URL + i} onClick={changeWaterMark} />\n    })\n\n  const makeCropper = (e) => {\n      e.preventDefault()\n      let upload = e.target.files;\n      if(upload.length === 0) return;\n      let cropBox = document.querySelector('#cropImage');\n\n      if(!upload[0].name.endsWith('.jpg') && !upload[0].name.endsWith('.png')) {\n        alert('Please select a .jpg or .png file.')\n        return\n      }\n\n      cropper.destroy()\n\n      cropBox.alt= 'Loading Image...'\n      cropBox.src = '';\n      let reader = new FileReader();\n      reader.onload = r => {\n          cropBox.alt= 'Image Editor Canvas'\n          cropBox.src = r.target.result;\n          buildCropper();\n          };\n      reader.readAsDataURL(upload[0]);\n  };\n\n\n  const createImage = (e, size) => {\n    e.preventDefault()\n    setcurrentDisplay(2)\n    buildDownloadLinks('downloadLinkSmall',outputSizeSmall)\n  //  buildDownloadLinks('downloadLinkMedium',outputSizeMedium)\n    buildDownloadLinks('downloadLinkLarge',outputSizeLarge)\n    };\n\n  const buildDownloadLinks = (downloadLinkTarget, outputSize) => {\n    let resultTarget = document.getElementById('resultImage');\n    let backgroundImage = document.getElementById('cropPreview');\n    let watermarkImage = document.getElementById('cropWatermark');\n\n\n    let containerDim = document.getElementById('cropPreview').getBoundingClientRect().width;\n    let watermarkYDim = watermarkImage.offsetTop * (outputSize/containerDim);\n    let watermarkXDim = watermarkImage.offsetLeft * (outputSize/containerDim);\n\n    resultTarget.setAttribute('width', outputSize);\n    resultTarget.setAttribute('height', outputSize);\n\n    resultTarget = resultTarget.getContext('2d');\n    resultTarget.globalAlpha = 1;\n    resultTarget.imageSmoothingQuality = 'high';\n    resultTarget.drawImage(backgroundImage,\n              0, 0, backgroundImage.naturalWidth, backgroundImage.naturalWidth,\n              0, 0, outputSize, outputSize);\n    resultTarget.globalAlpha = watermarkLevel;\n    resultTarget.drawImage(watermarkImage,\n             0, 0, 512, 512,\n             watermarkXDim, watermarkYDim, outputSize*(watermarkSize/100), outputSize*(watermarkSize/100));\n\n    resultTarget = document.getElementById('resultImage');\n    let downloadAnchor = document.getElementById(downloadLinkTarget);\n    downloadAnchor.setAttribute('href', resultTarget.toDataURL('image/png', 1.0));\n    downloadAnchor.setAttribute('download', 'YANG2020');\n  }\n\n  const goBack = () => {\n    document.getElementById('resultImage')\n      .getContext('2d')\n      .clearRect(0,0,outputSizeLarge,outputSizeLarge);\n    setcurrentDisplay(1)\n  };\n\n  const dragWatermark = () => {\n    let pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n    let watermarkTarget = document.getElementById(\"cropWatermark\");\n    watermarkTarget.onmousedown = startWatermarkDrag;\n    watermarkTarget.ontouchstart = startWatermarkDrag;\n\n    function startWatermarkDrag(e) {\n\n      e.preventDefault();\n\n      pos3 = e.clientX || e.targetTouches[0].clientX;\n      pos4 = e.clientY || e.targetTouches[0].clientY;\n\n      document.onmouseup = endWatermarkDrag;\n      document.onmousemove = watermarkDrag;\n      document.ontouchend = endWatermarkDrag;\n      document.ontouchmove = watermarkDrag;\n\n    }\n\n    function watermarkDrag(e) {\n\n      pos1 = e.clientX ? (pos3 - e.clientX) : (pos3 - e.targetTouches[0].clientX);\n      pos2 = e.clientY ? (pos4 - e.clientY) : (pos4 - e.targetTouches[0].clientY);\n      pos3 = e.clientX || e.targetTouches[0].clientX;\n      pos4 = e.clientY || e.targetTouches[0].clientY;\n\n      let watermarkDim = watermarkTarget.getBoundingClientRect().width;\n      let containerDim = document.getElementById('cropPreview').getBoundingClientRect().width;\n      let overtravel = watermarkTarget.width / 2;\n      let maxDim = (containerDim - watermarkDim) + overtravel;\n      let yOffset = (watermarkTarget.offsetTop - pos2) > maxDim ? maxDim+'px'\n                  : (watermarkTarget.offsetTop - pos2) < - overtravel\n                  ? -overtravel+'px'\n                  : (watermarkTarget.offsetTop - pos2) + 'px';\n\n      let xOffset = (watermarkTarget.offsetLeft - pos1) > maxDim ? maxDim+'px'\n                  : (watermarkTarget.offsetLeft - pos1) < - overtravel\n                  ? -overtravel+'px'\n                  : (watermarkTarget.offsetLeft - pos1) + 'px';\n\n      watermarkTarget.style.top = yOffset;\n      watermarkTarget.style.left = xOffset;\n    }\n\n    const endWatermarkDrag = () => {\n      document.onmouseup = null;\n      document.onmousemove = null;\n      document.ontouchend = null;\n      document.ontouchmove = null;\n    }\n}\n\n  return (\n    <div id='ProfileImageWatermarker'>\n      <header>\n        <picture>\n          <source media='(max-width: 749px)' srcSet={process.env.PUBLIC_URL + '/headerSmall.png'} />\n          <source media='(min-width: 750px)' srcSet={process.env.PUBLIC_URL + '/headerLarge.png'} />\n          <img src={process.env.PUBLIC_URL + '/headerLarge.png'} alt='Yang2020 Banner' />\n        </picture>\n      </header>\n\n      <div id='infoContainer'>\n        { currentDisplay === 1 &&\n          <>\n            <p>Show your support on social media with a Yang2020 watermarked avatar.</p>\n            <label className='actionButton'>\n              <h2><i className=\"fas fa-cloud-upload-alt\"></i> UPLOAD</h2>\n              <input id='photoUpload' type='file' accept='.png, .jpg' name='photo' onChange={makeCropper} hidden />\n            </label>\n          </>\n        }\n          <p style={ {'display': currentDisplay === 2 ? 'block' : 'none'} }>Download your new Yang2020 avatar and upload to your social platforms.</p>\n        <div id='downloadButtonContainer' style={ {'display': currentDisplay === 2 ? 'flex' : 'none'} }>\n          <a id='downloadLinkSmall' className='actionButton' href='empty' download=''>\n            <h2><i className=\"fas fa-cloud-download-alt\"></i> (128²)</h2>\n          </a>\n      {//    <a id='downloadLinkMedium' className='actionButton' href='empty' download='' >\n      //      <h2><i className=\"fas fa-cloud-download-alt\"></i> (256²)</h2>\n      //    </a>\n      }\n          <a id='downloadLinkLarge' className='actionButton' href='empty' download='' >\n            <h2><i className=\"fas fa-cloud-download-alt\"></i> (512²)</h2>\n          </a>\n        </div>\n\n      </div>\n      <div id='headerContainer'>\n        <h3 className='headerLeft'>{currentDisplay === 1 ? 'Drag/Zoom/Crop' : 'Upload your image:' }</h3>\n        <h3 className='headerRight'>{currentDisplay === 1 ? 'Drag' : 'Result' }</h3>\n      </div>\n      <div id='imageContainer'>\n        <div className={ currentDisplay === 1 ? 'cropBox' : 'cropBoxHide'} >\n          <img id='cropImage' src={process.env.PUBLIC_URL + '/startImage.jpg'} alt='Editor Canvas' />\n        </div>\n        <div className='cropBox' style={ {'display': currentDisplay === 2 ? 'block' : 'none'} }>\n          <ul>\n            <li><a href='https://twitter.com/settings/profile' target='_blank' rel=\"noopener noreferrer\"><i className=\"fab fa-twitter\"></i> Twitter (Use: 512²)</a></li>\n            <li><a href='https://facebook.com/settings/profile' target='_blank' rel=\"noopener noreferrer\"><i className=\"fab fa-facebook-f\"></i> Facebook (Use: ??)</a></li>\n            <li><a href='https://support.discordapp.com/hc/en-us/articles/204156688-How-do-I-change-my-avatar-' target='_blank' rel=\"noopener noreferrer\"><i className=\"fab fa-discord\"></i> Discord (Use: 128²)</a></li>\n            <li><a href='https://counter.social/settings/profile' target='_blank' rel=\"noopener noreferrer\"><i className=\"fas fa-fire-extinguisher\"></i> CounterSocial (512²)</a></li>\n          </ul>\n        </div>\n\n        <div className='previewBox' style={ {'display': currentDisplay === 1 ? 'block' : 'none'} }>\n          <img id='cropPreview' src={process.env.PUBLIC_URL + '/startImage.jpg'} alt='Cropped Preview' />\n          <img id='cropWatermark' src={process.env.PUBLIC_URL + watermarkOptions[selectedWatermark]} style={ { opacity: watermarkLevel, width: watermarkSize+'%' } } alt='Watermark Preview' />\n        </div>\n        <div className='previewBox' style={ {'display': currentDisplay === 2 ? 'block' : 'none'} }>\n          <canvas id=\"resultImage\" alt='Final Preview' ></canvas>\n        </div>\n\n      </div>\n\n      {currentDisplay === 1 &&\n      <div id='watermarkOptions'>\n         Choose a watermark:\n         {buildWatermarkOptions}\n      </div>\n      }\n\n      { currentDisplay === 1 &&\n      <>\n      <div id=\"watermarkSizeSlider\">\n        <input type=\"range\" min=\"25\" max=\"100\" value={watermarkSize} className=\"slider\" onInput={adjustWatermarkSize} />\n        <p>Watermark Size: {watermarkSize}%</p>\n      </div>\n      <div id=\"transparencySlider\">\n        <input type=\"range\" min=\"10\" max=\"100\" value={Math.round(watermarkLevel * 100)} className=\"slider\" onInput={adjustWatermarkLevel} />\n        <p>Watermark Transparency: {Math.round(watermarkLevel * 100)}%</p>\n      </div>\n      </>\n      }\n      <div className='navContainer'>\n      { currentDisplay === 1 &&\n        <div className='navButton' onClick={createImage}><p>CREATE <i className=\"far fa-hand-point-right\"></i></p></div>\n      }\n      { currentDisplay === 2 &&\n        <>\n        <div className='navButton' onClick={goBack}><p><i className=\"far fa-hand-point-left\"></i> BACK</p></div>\n        </>\n      }\n      </div>\n    </div>\n  );\n}\n\nReactDOM.render(<ProfileImageWatermarker />, document.getElementById('root'));\n"],"sourceRoot":""}