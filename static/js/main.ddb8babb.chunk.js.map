{"version":3,"sources":["index.js"],"names":["watermark","require","watermarkOptions","cropper","ReactDOM","render","useState","selectedWatermark","setSelectedWatermark","watermarkLevel","setWatermarkLevel","currentDisplay","setcurrentDisplay","useEffect","buildCropper","changeWaterMark","e","parseInt","target","id","cropBox","document","querySelector","cropPreview","Cropper","aspectRatio","minCropBoxWidth","dragMode","cropBoxMovable","crop","debounce","canvas","getCroppedCanvas","src","toDataURL","buildWatermarkOptions","map","i","j","className","key","alt","process","onClick","media","srcSet","type","accept","name","onChange","preventDefault","upload","files","length","endsWith","destroy","reader","FileReader","onload","r","result","readAsDataURL","alert","hidden","style","href","download","rel","opacity","min","max","value","Math","round","onInput","cropSelection","minWidth","maxWidth","imageSmoothingQuality","dataUrl","image","center","then","url","downloadAnchor","setAttribute","getElementById"],"mappings":"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","file":"static/js/main.ddb8babb.chunk.js","sourcesContent":["import ReactDOM from 'react-dom';\nimport React, {useState, useEffect} from 'react';\nimport Cropper from 'cropperjs';\nimport debounce from 'lodash/debounce';\nimport './ProfileImageWatermarker.css';\nimport '../node_modules/cropperjs/dist/cropper.css'\nconst watermark = require('watermarkjs')\n\nconst watermarkOptions = ['/watermarks/yang1.png','/watermarks/yang2.png','/watermarks/yang3.png']\nlet cropper = ''\n\nfunction ProfileImageWatermarker() {\n  const [selectedWatermark, setSelectedWatermark] = useState(0);\n  const [watermarkLevel, setWatermarkLevel] = useState(0.75);\n  const [currentDisplay, setcurrentDisplay] = useState(1);\n\n  useEffect( () => {\n        buildCropper();\n    },[]);\n\n  const changeWaterMark = (e) => {\n    setSelectedWatermark(parseInt(e.target.id))\n  }\n  const adjustWatermarkLevel = (e) => {\n    setWatermarkLevel(e.target.value / 100)\n  }\n\n  const buildCropper = () => {\n    let cropBox = document.querySelector('#cropImage')\n    let cropPreview = document.querySelector('#cropPreview')\n    cropper = new Cropper(cropBox, {\n        aspectRatio: 1,\n        minCropBoxWidth: 100,\n        dragMode: 'move',\n        cropBoxMovable: false,\n        crop: debounce(() => {\n          let canvas = cropper.getCroppedCanvas()\n          cropPreview.src = canvas.toDataURL('image/png')\n        }, 5)\n      });\n  }\n\n  const buildWatermarkOptions = watermarkOptions.map( (i,j) => {\n      return <img className='watermarkOption' id={`${j}watermarkChoice`} key={`watermarkoption${j}`} alt={i} src={process.env.PUBLIC_URL + i} onClick={changeWaterMark} />\n    })\n\n  const makeCropper = (e) => {\n      e.preventDefault()\n      let upload = e.target.files;\n      if(upload.length === 0) return;\n      let cropBox = document.querySelector('#cropImage');\n\n      if(!upload[0].name.endsWith('.jpg') && !upload[0].name.endsWith('.png')) {\n        alert('Please select a .jpg or .png file.')\n        return\n      }\n\n      cropper.destroy()\n\n      cropBox.alt= 'Loading Image...'\n      cropBox.src = '';\n      let reader = new FileReader();\n      reader.onload = r => {\n          cropBox.alt= 'Image Editor Canvas'\n          cropBox.src = r.target.result;\n          buildCropper();\n          };\n      reader.readAsDataURL(upload[0]);\n  };\n\n  const createImage = (e) => {\n    e.preventDefault()\n    let cropSelection = cropper.getCroppedCanvas({\n      //width: 512, //doesn't work??\n      minWidth: 512,\n      maxWidth: 512,\n      imageSmoothingQuality: 'high'\n    }).toDataURL()\n\n    watermark([cropSelection, process.env.PUBLIC_URL + watermarkOptions[selectedWatermark]])\n      .dataUrl(watermark.image.center(watermarkLevel))\n      .then(function (url) {\n        let downloadAnchor = document.querySelector('#downloadLink');\n        downloadAnchor.setAttribute('href', url)\n        downloadAnchor.setAttribute('download', 'YANG2020');\n        setcurrentDisplay(2)\n        document.querySelector('#resultImage').src = url\n      });\n    };\n\n    const goBack = () => {\n      setcurrentDisplay(1)\n    }\n\n  return (\n    <div id='ProfileImageWatermarker'>\n      <header>\n        <picture>\n          <source media='(max-width: 749px)' srcSet={process.env.PUBLIC_URL + '/headerSmall.png'} />\n          <source media='(min-width: 750px)' srcSet={process.env.PUBLIC_URL + '/headerLarge.png'} />\n          <img src={process.env.PUBLIC_URL + '/headerLarge.png'} alt='Yang2020 Banner' />\n        </picture>\n      </header>\n\n      <div id='infoContainer'>\n        { currentDisplay === 1 &&\n          <>\n            <p>Show your support on social media with a Yang2020 watermarked avatar.</p>\n            <label className='actionButton'>\n              <h2><i className=\"fas fa-cloud-upload-alt\"></i> UPLOAD</h2>\n              <input id='photoUpload' type='file' accept='.png, .jpg' name='photo' onChange={makeCropper} hidden />\n            </label>\n          </> }\n          <p style={ {'display': currentDisplay === 2 ? 'block' : 'none'} }>Download your new Yang2020 avatar and upload to your social platforms.</p>\n          <a id='downloadLink' className='actionButton' href='empty' download='' style={ {'display': currentDisplay === 2 ? 'flex' : 'none'} }>\n            <h2><i className=\"fas fa-cloud-download-alt\"></i> DOWNLOAD</h2>\n          </a>\n\n      </div>\n      <div id='headerContainer'>\n        <h3 className='headerLeft'>{currentDisplay === 1 ? 'Drag/Zoom/Crop' : 'Upload your image:' }</h3>\n        <h3 className='headerRight'>{currentDisplay === 1 ? 'Preview' : 'Result' }</h3>\n      </div>\n      <div id='imageContainer'>\n        <div className={ currentDisplay === 1 ? 'cropBox' : 'cropBoxHide'} >\n          <img id='cropImage' src={process.env.PUBLIC_URL + '/startImage.jpg'} alt='Editor Canvas' />\n        </div>\n        <div className='cropBox' style={ {'display': currentDisplay === 2 ? 'block' : 'none'} }>\n          <ul>\n            <li><a href='https://twitter.com/settings/profile' target='_blank' rel=\"noopener noreferrer\"><i className=\"fab fa-twitter\"></i> Twitter</a></li>\n            <li><a href='https://facebook.com/settings/profile' target='_blank' rel=\"noopener noreferrer\"><i className=\"fab fa-facebook-f\"></i> Facebook (??)</a></li>\n            <li><a href='https://support.discordapp.com/hc/en-us/articles/204156688-How-do-I-change-my-avatar-' target='_blank' rel=\"noopener noreferrer\"><i className=\"fab fa-discord\"></i> Discord</a></li>\n            <li><a href='https://counter.social/settings/profile' target='_blank' rel=\"noopener noreferrer\"><i className=\"fas fa-fire-extinguisher\"></i> CounterSocial</a></li>\n          </ul>\n        </div>\n\n        <div className='previewBox' style={ {'display': currentDisplay === 1 ? 'block' : 'none'} }>\n          <img id='cropPreview' src={process.env.PUBLIC_URL + '/startImage.jpg'} alt='Cropped Preview' />\n          <img id='cropWatermark' src={process.env.PUBLIC_URL + watermarkOptions[selectedWatermark]} style={ { opacity: watermarkLevel } } alt='Watermark Preview' />\n        </div>\n        <div className='previewBox' style={ {'display': currentDisplay === 2 ? 'block' : 'none'} }>\n          <img id='resultImage' src='' alt='Final Preview' />\n        </div>\n\n      </div>\n\n      {currentDisplay === 1 &&\n      <div id='watermarkOptions'>\n         Choose a watermark:\n         {buildWatermarkOptions}\n      </div>\n      }\n\n      { currentDisplay === 1 &&\n      <div id=\"transparencySlider\">\n        <input type=\"range\" min=\"10\" max=\"100\" value={Math.round(watermarkLevel * 100)} className=\"slider\" onInput={adjustWatermarkLevel} />\n        <p>Watermark Transparency: {Math.round(watermarkLevel * 100)}%</p>\n      </div>\n      }\n      <div className='navContainer'>\n      { currentDisplay === 1 &&\n        <div className='navButton' onClick={createImage}><p>CREATE <i className=\"far fa-hand-point-right\"></i></p></div>\n      }\n      { currentDisplay === 2 &&\n        <>\n        <div className='navButton' onClick={goBack}><p><i className=\"far fa-hand-point-left\"></i> BACK</p></div>\n    {  //  <a className='navButton' href='https://discord.gg/UqmqzfB' target='_blank' rel=\"noopener noreferrer\"><p>Yang202 Discord</p></a>\n    }\n        </>\n      }\n      </div>\n    </div>\n  );\n}\n\nReactDOM.render(<ProfileImageWatermarker />, document.getElementById('root'));\n"],"sourceRoot":""}